name: Docker Build and Push

on:
  push:
    branches: ["main"]        # Triggers when code is pushed to main branch
  pull_request:
    branches: ["main"]        # Triggers when PR is created/updated for main branch
  workflow_dispatch:          # Allows manual triggering of the workflow

env:
  REGISTRY: docker.io         # Docker registry to use
  IMAGE_NAME: ${{ github.repository }}  # Uses your GitHub repository name as image name

jobs:
  build-and-push:
    runs-on: meet-laptop    # Uses Ubuntu as the build environment
    permissions:
      contents: read          # Permission to read repository contents
      packages: write         # Permission to write packages (Docker images)

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4  # Gets your code from GitHub

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Sets up Docker Buildx for efficient builds

      # Step 3: Login to Azure
      # - name: Login to Azure
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}  # Uses Azure credentials from secrets

      # Step 4: Login to Azure Container Registry (ACR)
      # - name: Docker Login to ACR
      #   run: az acr login --name ${{ secrets.ACR_NAME }}  # Logs into ACR using Azure CLI

      # Step 5: Build and push Docker image
      - name: Build and push Docker image
        # uses: docker/build-push-action@v5
        # with:
        #   context: .                  # Uses current directory as build context
        #   push: true                  # Pushes the image after building
        #   tags: |                     # Specifies image tags
        #     ${REGISTRY}/${IMAGE_NAME}:${GITHUB_RUN_ID}     
        #     ${REGISTRY}/${IMAGE_NAME}:latest               
        #   cache-from: type=gha    #    Uses GitHub Actions build cache for faster builds
        #   cache-to: type=gha,mode=max
        run: |
          docker build -t ${REGISTRY}/${IMAGE_NAME}:${GITHUB_RUN_ID} .
          # docker push ${{ secrets.ACR_NAME }}.azurecr.io/myapp:latest